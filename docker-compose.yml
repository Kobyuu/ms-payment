version: '3.8'

services:

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: postgres
    container_name: ms-payment_postgres
    ports:
      - "8432:5432"
    volumes:
      - postgres_data_payment:/var/lib/postgresql/data
    networks:
      - microservicios-red
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  db-init:
      image: postgres:15
      container_name: ms-payment_db-init
      depends_on:
        postgres:
          condition: service_healthy
      command: >
        psql -U postgres -h postgres -c "CREATE DATABASE \"ms-payment\";"
      environment:
        PGPASSWORD: 1234
      networks:
        - microservicios-red

  redis:
    image: redis:7
    container_name: ms-payment_redis
    ports:
      - "9379:6379"
    networks:
      - microservicios-red

  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: ms-payment_app
    environment:
      # Variables de conexi贸n
      DATABASE_URL: postgres://postgres:1234@postgres:5432/ms-payment
      PRODUCT_SERVICE_URL: http://ms-catalog_app:4001/api/products
      
      # Configuraci贸n de Redis
      REDIS_URL: redis://redis:6379
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_RETRY_DELAY: 2000
      
      # Configuraci贸n de la aplicaci贸n
      PORT: 4003
      RETRY_COUNT: 3
      RETRY_DELAY: 1000
      OUTPUT_STOCK: 2
      CACHE_EXPIRY: 3600
    volumes:
      - .:/app
    ports:
      - "5003:4003"
    command: npm run dev
    networks:
      - microservicios-red
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

volumes:
  postgres_data_payment:
networks:
  microservicios-red:
    external: true